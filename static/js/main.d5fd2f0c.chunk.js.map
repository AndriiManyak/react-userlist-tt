{"version":3,"sources":["components/Header/Header.jsx","api/api.js","store/initialState.js","store/users.js","store/index.js","components/PaginationButton/PaginationButton.jsx","components/PaginationPageButton/PaginationPageButton.jsx","components/Pagination/Pagination.jsx","components/Sidebar/Sidebar.jsx","components/User/User.jsx","components/UserList/UserList.jsx","components/Users/Users.jsx","App.jsx","index.js"],"names":["Header","className","to","exact","activeClassName","request","a","fetch","response","json","initialState","users","SAVE","actions","type","usersReducer","state","action","getUsers","usersState","reducer","combineReducers","store","createStore","PaginationButton","text","handleClick","isDisabled","onClick","disabled","PaginationPageButton","pageNumber","isActive","classNames","Pagination__button","Pagination","React","memo","totalElements","elementsPerPage","currentPage","changePage","selectNextPage","selectPreviousPage","pagesAmount","Math","ceil","pages","i","push","map","page","Sidebar","index","randomIndex","randomUser","useSelector","name","surname","User","desc","UserList","usersPerPage","currentUsers","inxedOfLastUser","indexOfFirstUser","slice","getPaginatedUsers","user","id","Users","dispatch","useDispatch","useState","setRandomIndex","setCurrentPage","isLoading","setIsLoading","loadingError","setLoadingError","useEffect","getUsersFromServer","interval","setInterval","getRandomNumber","clearInterval","dataFromServer","max","min","floor","random","useCallback","prevState","length","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5fd2f0c.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = () => (\n  <header className=\"Header\">\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        activeClassName=\"Header--active\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/users\"\n        activeClassName=\"Header--active\"\n      >\n        Users\n      </NavLink>\n    </nav>\n  </header>\n);\n","const BASE_URL = 'https://api.jsonbin.io/b/5fb68f0f02f80c2af522bc69';\n\nconst request = async() => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n\nexport default request;\n","const initialState = {\n  users: [],\n};\n\nexport default initialState;\n","import initialState from './initialState';\n\nconst SAVE = 'users/SAVE';\n\nexport const actions = {\n  save: users => ({\n    type: SAVE,\n    users,\n  }),\n};\n\nconst usersReducer = (state = initialState, action) => {\n  if (action.type === SAVE) {\n    return {\n      ...state,\n      users: [...action.users],\n    };\n  }\n\n  return state;\n};\n\nexport default usersReducer;\n","import { createStore, combineReducers } from 'redux';\n\nimport usersReducer from './users';\n\nexport function getUsers(state) {\n  return state.usersState.users;\n}\n\nexport function getPaginatedUsers(currentPage, usersPerPage) {\n  return (state) => {\n    const inxedOfLastUser = currentPage * usersPerPage;\n    const indexOfFirstUser = inxedOfLastUser - usersPerPage;\n    const users = getUsers(state);\n\n    return users.slice(indexOfFirstUser, inxedOfLastUser);\n  };\n}\n\nexport function getUser(index) {\n  return (state) => {\n    const users = getUsers(state);\n\n    return users[index];\n  };\n}\n\nconst reducer = combineReducers({\n  usersState: usersReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PaginationButton = ({\n  text,\n  handleClick,\n  isDisabled,\n}) => (\n  <li\n    className=\"Pagination__item\"\n  >\n    <button\n      type=\"button\"\n      className=\"Pagination__button\"\n      onClick={handleClick}\n      disabled={isDisabled}\n    >\n      {text}\n    </button>\n  </li>\n);\n\nPaginationButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const PaginationPageButton = ({\n  pageNumber,\n  isActive,\n  handleClick,\n}) => (\n  <li className=\"Pagination__item\">\n    <button\n      type=\"button\"\n      className={\n        classNames(\n          { Pagination__button: true },\n          { 'Pagination__button--active': isActive },\n        )\n      }\n      onClick={() => handleClick(pageNumber)}\n    >\n      {pageNumber}\n    </button>\n  </li>\n);\n\nPaginationPageButton.propTypes = {\n  pageNumber: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PaginationButton } from '../PaginationButton/PaginationButton';\nimport { PaginationPageButton }\n  from '../PaginationPageButton/PaginationPageButton';\n\nimport './Pagination.scss';\n\nexport const Pagination = React.memo(\n  ({\n    totalElements,\n    elementsPerPage,\n    currentPage,\n    changePage,\n    selectNextPage,\n    selectPreviousPage,\n  }) => {\n    const pagesAmount = Math.ceil(totalElements / elementsPerPage);\n    const pages = [];\n\n    for (let i = 1; i <= pagesAmount; i += 1) {\n      pages.push(i);\n    }\n\n    return (\n      <nav className=\"Pagination\">\n        <ul className=\"Pagination__list\">\n          <PaginationButton\n            text=\"Previous\"\n            handleClick={selectPreviousPage}\n            isDisabled={currentPage === 1}\n          />\n          {pages.map(page => (\n            <PaginationPageButton\n              key={page}\n              pageNumber={page}\n              handleClick={changePage}\n              isActive={page === currentPage}\n            />\n          ))}\n          <PaginationButton\n            text=\"Next\"\n            handleClick={selectNextPage}\n            isDisabled={currentPage === pagesAmount}\n          />\n        </ul>\n      </nav>\n    );\n  },\n);\n\nPagination.propTypes = {\n  totalElements: PropTypes.number.isRequired,\n  elementsPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n  selectNextPage: PropTypes.func.isRequired,\n  selectPreviousPage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getUser } from '../../store';\n\nexport const Sidebar = ({ randomIndex }) => {\n  const randomUser = useSelector(getUser(randomIndex));\n\n  return (\n    <h2>\n      {`${randomUser.name} ${randomUser.surname}`}\n    </h2>\n  );\n};\n\nSidebar.propTypes = {\n  randomIndex: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.scss';\n\nexport const User = ({ name, surname, desc }) => (\n  <div className=\"User\">\n    <h3 className=\"User__name\">{`${name} ${surname}`}</h3>\n    <p className=\"User__description\">{desc}</p>\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  surname: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { User } from '../User/User';\nimport { getPaginatedUsers } from '../../store';\n\nexport const UserList = React.memo(\n  ({\n    currentPage,\n    usersPerPage,\n  }) => {\n    const currentUsers = useSelector(\n      getPaginatedUsers(currentPage, usersPerPage),\n    );\n\n    return (\n      <>\n        <ul>\n          {currentUsers.map(user => (\n            <li\n              key={user.id}\n            >\n              <User\n                {...user}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  },\n);\n\nUserList.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  usersPerPage: PropTypes.number.isRequired,\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport request from '../../api/api';\nimport { getUsers } from '../../store';\nimport { actions } from '../../store/users';\nimport { Pagination } from '../Pagination';\nimport { Sidebar } from '../Sidebar';\nimport { UserList } from '../UserList';\n\nimport './Users.scss';\n\nexport const Users = () => {\n  const users = useSelector(getUsers);\n  const dispatch = useDispatch();\n  const [randomIndex, setRandomIndex] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  useEffect(() => {\n    getUsersFromServer();\n    const interval = setInterval(() => {\n      setRandomIndex(getRandomNumber(0, 19));\n    }, 8000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const getUsersFromServer = async() => {\n    setIsLoading(true);\n    try {\n      const dataFromServer = await request();\n\n      dispatch(actions.save(dataFromServer.users));\n    } catch (error) {\n      setLoadingError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  const getRandomNumber = (max, min) => (\n    Math.floor(Math.random() * (max - min + 1)) + min\n  );\n\n  const changePage = useCallback((pageNumber) => {\n    setCurrentPage(pageNumber);\n  }, []);\n\n  const selectNextPage = useCallback(() => {\n    setCurrentPage(prevState => prevState + 1);\n  }, []);\n\n  const selectPreviousPage = useCallback(() => {\n    setCurrentPage(prevState => prevState - 1);\n  }, []);\n\n  return (\n    <div className=\"Users\">\n      {isLoading && (<h2>...Loading</h2>)}\n\n      {(loadingError && !users)\n        && (\n          <h3 className=\"Users__error\">An error occured when loading users</h3>\n        )\n      }\n\n      {(users.length > 0 && !isLoading) && (\n        <>\n          <div className=\"Users__list\">\n            <UserList\n              currentPage={currentPage}\n              usersPerPage={usersPerPage}\n            />\n\n            <Pagination\n              totalElements={users.length}\n              elementsPerPage={usersPerPage}\n              currentPage={currentPage}\n              changePage={changePage}\n              selectNextPage={selectNextPage}\n              selectPreviousPage={selectPreviousPage}\n            />\n          </div>\n\n          <div>\n            <Sidebar\n              randomIndex={randomIndex}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Users } from './components/Users';\n\nexport const App = () => (\n  <div className=\"App\">\n    <Header />\n\n    <div className=\"App__content\">\n      <Switch>\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n        <Route path=\"/\">\n          <h3>This is home page. To see list of users go to users page</h3>\n        </Route>\n      </Switch>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}